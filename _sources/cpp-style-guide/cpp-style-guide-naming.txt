================================================================================
Правила именования
================================================================================

--------------------------------------------------------------------------------
Используйте правильный английский для идентификаторов
--------------------------------------------------------------------------------

Все имена и идентификаторы пишутся на английском (без использования 
транслитерации и т.д.)

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     file_name
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     imya_fayla
   =============  ==============================================================

--------------------------------------------------------------------------------
Избегайте "бессодержательных" имен и нестандартных сокращений
--------------------------------------------------------------------------------

.. todo:: Добавить типовых примеров

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     // подсчет суммы четных натуральных не превышающих 10
                     int sum(0);
                     for (int i(2); i <= 10; i += 2) {
                        sum += i;
                     }

   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     // подсчет суммы четных натуральных не превышающих 10
                     int tmp(0);
                     for (int a(2); a <= 10; a += 2) {
                        tmp += a;
                     }

   =============  ==============================================================

--------------------------------------------------------------------------------
Сокращения (аббревиатуры) подчиняются общим правилам
--------------------------------------------------------------------------------

Если в качестве имен (части имен) используются сокращения, аббревиатуры и 
акронимы, то последние должны подчиняться общим правилам.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     ExportHtmlSource();

                     OpenDvdPlayer();
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     ExportHTMLSource();

                     OpenDVDPlayer();
   =============  ==============================================================

--------------------------------------------------------------------------------
Именование папок и файлов в нижнем регистре через подчеркивание
--------------------------------------------------------------------------------

Имена файлов и папок исходного кода пишутся в нижнем регистре через подчеркивания. 
Исключения в части регистра допустимы для библиотек сторонних разработчиков и при 
наличии технологических ограничений (например, файлы системы сборки CMake вида 
CMakeList.txt).

При выборе имен следует избегать повторения имен стандартной библиотеки и 
распространных библиотек сторонних разработчиков. Приветствуется использование 
достаточно длинных и информативных имен.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      report_generator

                  report_generator.h
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    db.h

                  crepgen.hpp

   =============  ==============================================================

--------------------------------------------------------------------------------
Используйте стандартные расширения для файлов с исходными кодами 
--------------------------------------------------------------------------------

Используйте для различных типов файлов следующие расширения:

* «h» - заголовочные файлы С++
* «cpp» - файлы реализаций С++

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      report_generator.h

                  report_generator.cpp
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    crepgen.H

                  crepgen.hpp

                  report_generator.cxx

                  report.c
   =============  ==============================================================


--------------------------------------------------------------------------------
Пишите имена типов в смешанном регистре с заглавной буквы (без подчеркиваний)
--------------------------------------------------------------------------------

Имена всех типов (классов, структур, псевдонимов типа, перечислений и параметров 
шаблонов) пишите в смешанном регистре с заглавной буквы без подчеркиваний. Каждое 
новое слово в имени типа начинайте с заглавной буквы.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                    // classes and structs
                    class Rational { ...
                    
                    class UrlTableTester { ...

                    struct UrlTableProperties { ...
                   
                    // using aliases
                    using PropertiesMap = hash_map<UrlTableProperties*, std::string>;
                   
                    // enums
                    enum UrlTableErrors { ...
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     class rational { ...

   =============  ==============================================================


--------------------------------------------------------------------------------
Пишите имена переменных в нижнем регистре через подчеркивания
--------------------------------------------------------------------------------

Имена всех переменных (локальных, глобальных, параметров функций и полей) пишите 
в нижнем регистре с использованием символа подчеркивания для разделения отедельных 
слов.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     str_message
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     strmessage

                     str_message

                     StrMessage
   =============  ==============================================================

Имена полей структур подчиняются общему правилу именоваания переменных. 
Имена полей классов завершайте символом подчеркивания. 

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     class FileInfo {
                       // ...
                     private:
                       std::string file_path_;
                     };

                     struct ComplexNumber {
                     public:
                       double re;
                       double im;
                       // ...
                     };
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     class FileInfo {
                       // ...
                     private:
                       std::string m_file_path_; // нестандартный префикс
                       std::string file_alias;   // нет стандартного суффикса
                     };

   =============  ==============================================================


---------------------------------------------------------------------------------------
Пишите имена неизменяемых и статических переменных в смешанном регистре с префиксом 'k'
---------------------------------------------------------------------------------------

Используйте префикс 'k' для имен неименяемых (const, constexpr), глобальных и 
статических (static) переменных. Если смешанный регистр затрудняет чтение, то 
можно использовать подчеркивание для отделения префикса.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     const int kDaysInAWeek(7);
                     const int kAndroid8_0_0(24); // Android 8.0.0

                     static int kCallCounter(0);
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     const int k_days_in_a_week(7);
   =============  ==============================================================

--------------------------------------------------------------------------------
Используйте стиль именования константых переменных для значений перечислений
--------------------------------------------------------------------------------

Пишите имена значений перечислений аналогично константным переменным, т.е. в 
смешанном регистре с префиксом 'k'.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     enum UrlTableErrors {
                       kSuccess = 0,
                       kErrorOutOfMemory,
                       kErrorMalformedInput,
                     };
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     MaxIterations
                     max_iterations
                     MAXITERATIONS
   =============  ==============================================================

--------------------------------------------------------------------------------
Пишите имена функций в смешанном регистре начиная с символа верхнего регистра
--------------------------------------------------------------------------------

Имена функций пишите в смешанном регистре начиная с символа верхнего регистра.
Выбирайте имена функциям в зависимости от их семантики. Функциям (возвращают 
некоторое значение) давайте имена в соответствии с тем, что они возвращают. 
Процедурам (ничего не возвращают) давайте имена в соответствии с тем, что они 
делают. Рекомендуется начинать имя функции с глагола (английского).

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     AddTableEntry()
                     DeleteUrl()
                     OpenFileOrDie()
                     GetName()
                     ComputeTotalWidth()
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     GetName()
                     widthCompute()
   =============  ==============================================================

Для парных функций используйте парные имена.

.. hlist::
   :columns: 2

   * get/set
   * add/remove
   * create/destroy
   * start/stop
   * insert/delete
   * increment/decrement
   * old/new
   * begin/end
   * first/last
   * up/down
   * min/max
   * next/previous
   * old/new
   * open/close
   * show/hide
   * suspend/resume
   * etc.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     bool AddPage() {
                         ...
                     }
                     
                     bool RemovePage() {
                         ...
                     }
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     bool AddPage() {
                         ...
                     }

                     bool DestroyPage() {
                         ...
                     }


   =============  ==============================================================

--------------------------------------------------------------------------------
Используйте нижний регистр и подчеркивания для пространств имен
--------------------------------------------------------------------------------

Пишите имена пространств имен в нижнем регистре с использованием подчеркивания в 
качестве разделителя.

.. todo:: Перенести принципы из https://google.github.io/styleguide/cppguide.html#Namespace_Names

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     std
                     model::analyzer
                     common::math_geometry
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     SAMPLE
                     Model::analyzer
                     common::mathGeometry
   =============  ==============================================================


--------------------------------------------------------------------------------
Использование распространенных сокращений и соглашений при именовании
--------------------------------------------------------------------------------

Используйте множественные формы существительных для обозначения коллекций объектов.

:ПРИМЕР:

   .. code-block:: c++

      vector<Point> points;


Используйте префикс "i" для переменных, определяющих порядковый номер некоторого объекта.

:ПРИМЕР:

   .. code-block:: c++

      i_point

Например, такой префикс можно использовать для именования индексов строк (row) и 
столбцов (column) при написании циклов обхода матрицы.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     for (ptrdiff_t i_row(0); i_row < m.RowCount(); i_row += 1) {
                       for (ptrdiff_t i_col(0); i_col < m.ColumnCount(); i_col += 1) {
                           // ...
                       }
                     }
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     for (int i(0); i < m.RowCount(); i += 1) {
                       for (int j(0); j < m.ColumnCount(); j += 1) {
                           // ...
                       }
                     }
   =============  ==============================================================

Используйте префиксы "is", "has", "can", "should" для имен переменных и 
функций, определяющих логические свойства некоторого объекта.

:ПРИМЕР:

   .. code-block:: c++

      bool is_book(true);
      
   .. code-block:: c++

      bool CanMove() const;


Для переменных, определяющих число некоторых объектов, можно использовать 
префикс "n" (сокращение от "number_of").

:ПРИМЕР:

   .. code-block:: c++

      n_point = points.size();


--------------------------------------------------------------------------------
Используйте верхний регистр и подчеркивания для макроопределений
--------------------------------------------------------------------------------

Пишите макроопределения в верхнем регистре с использованием подчеркивания в качестве разделителя.

:ПРИМЕР:

   .. code-block:: c++

      #ifndef PAGER_H_20110201
      #define PAGER_H_20110201
      

--------------------------------------------------------------------------------------------
Используйте одиночные заглавные буквы для идентификаторов типизированных параметров шаблонов
--------------------------------------------------------------------------------------------

:ПРИМЕР:

   .. code-block:: c++

      template<class T>

      template<typename C, typename D>

--------------------------------------------------------------------------------
Избегайте отрицаний в идентификаторах
--------------------------------------------------------------------------------

Используйте имена переменных без отрицаний. Наличие отрицания в имени переменной 
сильно усложняет понимание логических выражений, особенно, если в последних 
присутствует логическое отрицание.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     bool is_error(false);
                     bool can_move(true);

                  .. code-block:: c++

                     if (!is_error) {
                         ...
                     }
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     bool is_not_error(true);
                     bool cant_move(false);

                  .. code-block:: c++

                     if (!is_not_error) {
                         ...
                     }
   =============  ==============================================================

--------------------------------------------------------------------------------
Избегайте запрещенных идентификаторов
--------------------------------------------------------------------------------

Запрещено начинать имена с подчеркивания (резервируется для реализации 
компиляторов).

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     file_name
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     _fileName
   =============  ==============================================================
